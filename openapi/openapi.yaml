openapi: 3.0.3
info:
  version: "1.0"
  title: ISURIDE API Specification
servers:
  - url: "http://localhost:8080/api/"
    description: api
paths:
  /initialize:
    post:
      tags:
        - system
      summary: サービスを初期化する
      description: ""
      operationId: post-initialize
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_server:
                  type: string
                  description: 決済サーバーアドレス
              required:
                - payment_server
      responses:
        "200":
          description: サービスの初期化が完了した
          content:
            application/json:
              schema:
                type: object
                properties:
                  language:
                    type: string
                    description: |
                      実装言語
                      - go
                      - perl
                      - php
                      - python
                      - ruby
                      - rust
                      - node
                required:
                  - language
  /app/register:
    post:
      tags:
        - app
      summary: ユーザーが会員登録を行う
      operationId: app-post-register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: ユーザー名
                firstname:
                  type: string
                  description: 名前
                lastname:
                  type: string
                  description: 名字
                date_of_birth:
                  type: string
                  description: 生年月日
              required:
                - username
                - firstname
                - lastname
                - date_of_birth
      responses:
        "200":
          description: ユーザー登録が完了した
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: ユーザーID
                required:
                  - id
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /app/payment-methods:
    post:
      tags:
        - app
      summary: 決済トークンの登録
      operationId: app-post-payment-methods
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 決済トークン
              required:
                - token
      responses:
        "204":
          description: 決済トークンの登録に成功した
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /app/requests:
    post:
      tags:
        - app
      summary: ユーザーが配車要求を行う
      operationId: app-post-request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pickup_coordinate:
                  $ref: "#/components/schemas/Coordinate"
                  description: 配車位置
                destination_coordinate:
                  $ref: "#/components/schemas/Coordinate"
                  description: 目的地
              required:
                - pickup_coordinate
                - destination_coordinate
      responses:
        "202":
          description: 配車要求を受け付けた
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                    description: 配車要求ID
                required:
                  - request_id
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/app/requests/{request_id}":
    get:
      tags:
        - app
      summary: ユーザーが配車要求の状態を確認する
      operationId: app-get-request
      parameters:
        - $ref: "#/components/parameters/request_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppRequest"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/app/requests/{request_id}/evaluate":
    post:
      tags:
        - app
      summary: ユーザーが椅子を評価する
      operationId: app-post-request-evaluate
      parameters:
        - name: request_id
          in: path
          description: 配車要求ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                evaluation:
                  type: integer
                  description: 椅子の評価
                  minimum: 1
                  maximum: 5
              required:
                - evaluation
      responses:
        "200":
          description: ユーザーが椅子を評価した
          content:
            application/json:
              schema:
                type: object
                properties:
                  fare:
                    type: integer
                    description: 運賃
                  completed_at:
                    type: string
                    description: 完了日時
                required:
                  - fare
                  - completed_at
        "400":
          description: 椅子が目的地に到着していない、ユーザーが乗車していない、すでに到着しているなど
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: 存在しない配車要求
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /app/notification:
    get:
      tags:
        - app
      summary: ユーザー向け通知エンドポイント
      description: 最新の自分の配車要求を取得します。
      operationId: app-get-notification
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                    description: 配車要求ID
                  pickup_coordinate:
                    $ref: "#/components/schemas/Coordinate"
                  destination_coordinate:
                    $ref: "#/components/schemas/Coordinate"
                  status:
                    $ref: "#/components/schemas/RequestStatus"
                  chair:
                    $ref: "#/components/schemas/AppChair"
                  created_at:
                    type: number
                    description: 配車要求日時
                  updated_at:
                    type: number
                    description: 配車要求更新日時
                  retry_after_ms:
                    type: integer
                    description: 次回の通知ポーリングまでの待機時間(ミリ秒単位)
                required:
                  - request_id
                  - pickup_coordinate
                  - destination_coordinate
                  - status
                  - created_at
                  - updated_at
        "204":
          description: 対象となる配車要求が存在しない場合
  /app/nearby-chairs:
    get:
      tags:
        - app
      summary: ユーザーの近くにいる椅子を取得する
      operationId: app-get-nearby-chairs
      parameters:
        - name: latitude
          in: query
          description: 緯度
          required: true
          schema:
            type: integer
        - name: longitude
          in: query
          description: 経度
          required: true
          schema:
            type: integer
        - name: distance
          in: query
          description: 検索距離
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  chairs:
                    type: array
                    items:
                      $ref: "#/components/schemas/AppChair"
                  retrieved_at:
                    type: string
                    description: 取得日時
                required:
                  - chairs
                  - retrieved_at
  /owner/register:
    post:
      tags:
        - owner
      summary: 椅子のオーナー自身が登録を行う
      operationId: owner-post-register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: オーナー名
              required:
                - name
      responses:
        "201":
          description: 椅子のオーナー登録が完了した
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: オーナーID
                required:
                  - id
  /owner/sales:
    get:
      tags:
        - owner
      summary: 椅子のオーナーが指定期間の全体・椅子ごと・モデルごとの売上情報を取得する
      operationId: owner-get-sales
      parameters:
        - name: since
          in: query
          description: 開始日時（含む）
          schema:
            type: string
        - name: until
          in: query
          description: 終了日時（含む）
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_sales:
                    type: integer
                    description: オーナーが管理する椅子全体の売上
                  chairs:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: 椅子ID
                        name:
                          type: string
                          description: 椅子名
                        sales:
                          type: integer
                          description: 椅子ごとの売上
                      required:
                        - id
                        - name
                        - sales
                    description: 椅子ごとの売上情報
                  models:
                    type: array
                    items:
                      type: object
                      properties:
                        model:
                          type: string
                          description: 椅子モデル
                        sales:
                          type: integer
                          description: モデルごとの売上
                      required:
                        - model
                        - sales
                    description: モデルごとの売上情報
                required:
                  - total_sales
                  - chairs
                  - models
  /owner/chairs:
    get:
      tags:
        - owner
      summary: 椅子のオーナーが管理している椅子の一覧を取得する
      operationId: owner-get-chairs
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  chairs:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: 椅子ID
                        name:
                          type: string
                          description: 椅子の名前
                        model:
                          type: string
                          description: 椅子のモデル
                        active:
                          type: boolean
                          description: 稼働中かどうか
                        registered_at:
                          type: string
                          description: 登録日時
                        total_distance:
                          type: integer
                          description: 総移動距離
                        total_distance_updated_at:
                          type: string
                          description: 総移動距離の更新日時
                      required:
                        - id
                        - name
                        - model
                        - active
                        - registered_at
                        - total_distance
                required:
                  - chairs
  /owner/chairs/{chair_id}:
    get:
      tags:
        - owner
      summary: 管理している椅子の詳細を取得する
      operationId: owner-get-chair-detail
      parameters:
        - name: chair_id
          in: path
          description: 椅子ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: 椅子ID
                  name:
                    type: string
                    description: 椅子の名前
                  model:
                    type: string
                    description: 椅子のモデル
                  active:
                    type: boolean
                    description: 稼働中かどうか
                  registered_at:
                    type: string
                    description: 登録日時
                  total_distance:
                    type: integer
                    description: 総移動距離
                  total_distance_updated_at:
                    type: string
                    description: 総移動距離の更新日時
                required:
                  - id
                  - name
                  - model
                  - active
                  - registered_at
                  - total_distance
  /chair/register:
    post:
      tags:
        - chair
      summary: 椅子登録を行う
      operationId: chair-post-register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 椅子の名前
                model:
                  type: string
                  description: 椅子のモデル
              required:
                - name
                - model
      responses:
        "201":
          description: 椅子登録が完了した
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: アクセストークン
                  id:
                    type: string
                    description: 椅子ID
                required:
                  - access_token
                  - id
  /chair/activate:
    post:
      tags:
        - chair
      summary: 椅子が配車受付を開始する
      description: ""
      operationId: chair-post-activate
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "204":
          description: サービスが椅子が配車受付を開始したことを了解した
  /chair/deactivate:
    post:
      tags:
        - chair
      summary: 椅子が配車受付を停止する
      description: ""
      operationId: chair-post-deactivate
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "204":
          description: サービスが椅子が配車受付を停止したことを了解した
  /chair/coordinate:
    post:
      tags:
        - chair
      summary: 椅子が位置情報を送信する
      operationId: chair-post-coordinate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Coordinate"
      responses:
        "200":
          description: サービスが椅子の座標を認識した
          content:
            application/json:
              schema:
                type: object
                properties:
                  datetime:
                    type: string
                    description: 記録日時
                required:
                  - datetime
  "/chair/requests/{request_id}":
    get:
      tags:
        - chair
      summary: 椅子が配車要求情報を取得する
      description: 椅子向け通知エンドポイントから通知されたidの情報を取得する想定
      operationId: chair-get-request
      parameters:
        - $ref: "#/components/parameters/request_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChairRequest"
        "404":
          description: 存在しない配車要求、対象の椅子にマッチングされていない配車要求を取得しようとした場合など
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/chair/requests/{request_id}/accept":
    post:
      tags:
        - chair
      summary: 椅子が配車要求を受理する
      operationId: chair-post-request-accept
      parameters:
        - $ref: "#/components/parameters/request_id"
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/chair/requests/{request_id}/deny":
    post:
      tags:
        - chair
      summary: 椅子が配車要求を拒否する
      operationId: chair-post-request-deny
      parameters:
        - $ref: "#/components/parameters/request_id"
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/chair/requests/{request_id}/depart":
    post:
      tags:
        - chair
      summary: 椅子が配車位置から出発する(ユーザーが乗車完了した)
      operationId: chair-post-request-depart
      parameters:
        - name: request_id
          in: path
          description: 配車要求ID
          required: true
          schema:
            type: string
      responses:
        "204":
          description: 椅子が出発した
        "400":
          description: 椅子が乗車位置の座標に居ない、既に出発しているなど
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: 存在しない配車要求
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /chair/notification:
    get:
      tags:
        - chair
      summary: 椅子向け通知エンドポイント
      description: 椅子に配車要求を通知するなどで使う想定
      operationId: chair-get-notification
      responses:
        "200":
          description: 自分に割り当てられた最新の配車要求
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                    description: 配車要求ID
                  user:
                    $ref: "#/components/schemas/User"
                  pickup_coordinate:
                    $ref: "#/components/schemas/Coordinate"
                  destination_coordinate:
                    $ref: "#/components/schemas/Coordinate"
                  status:
                    $ref: "#/components/schemas/RequestStatus"
                  retry_after_ms:
                    type: integer
                    description: 次回の通知ポーリングまでの待機時間(ミリ秒単位)
                required:
                  - request_id
                  - user
                  - destination_coordinate
        "204":
          description: 割り当てられた配車要求が存在しない場合
components:
  parameters:
    request_id:
      name: request_id
      in: path
      description: 配車要求ID
      required: true
      schema:
        type: string
  schemas:
    Coordinate:
      type: object
      title: Coordinate
      description: 座標情報
      additionalProperties: false
      properties:
        latitude:
          type: integer
          description: 経度
        longitude:
          type: integer
          description: 緯度
      required:
        - latitude
        - longitude
    RequestStatus:
      type: string
      enum:
        - MATCHING
        - DISPATCHING
        - DISPATCHED
        - CARRYING
        - ARRIVED
        - COMPLETED
      title: RequestStatus
      description: |
        配車要求ステータス

        MATCHING: サービス上でマッチング処理を行なっていて椅子が確定していない
        DISPATCHING: 椅子が確定し、乗車位置に向かっている
        DISPATCHED: 椅子が乗車位置に到着して、ユーザーの乗車を待機している
        CARRYING: ユーザーが乗車し、椅子が目的地に向かっている
        ARRIVED: 目的地に到着した
        COMPLETED: ユーザーの決済・椅子評価が完了した
    AppChair:
      type: object
      title: AppChair
      description: App向けの椅子情報
      properties:
        id:
          type: string
          description: 椅子ID
        name:
          type: string
          description: 椅子の名前
        model:
          type: string
          description: 椅子のモデル
        stats:
          type: object
          description: 椅子の統計情報
          properties:
            recent_rides:
              type: array
              description: 最近の乗車情報
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: 配車要求ID
                  pickup_coordinate:
                    $ref: "#/components/schemas/Coordinate"
                  destination_coordinate:
                    $ref: "#/components/schemas/Coordinate"
                  distance:
                    type: integer
                    description: 移動距離
                  duration:
                    type: integer
                    description: 移動時間 (ナノ秒)
                  evaluation:
                    type: integer
                    description: 評価
                required:
                  - id
                  - pickup_coordinate
                  - destination_coordinate
                  - distance
                  - duration
                  - evaluation
            total_rides_count:
              type: integer
              description: 総乗車回数
            total_evaluation_avg:
              type: number
              description: 総評価平均
          required:
            - recent_rides
            - total_rides_count
            - total_evaluation_avg
      required:
        - id
        - name
        - model
        - stats
    User:
      type: object
      title: User
      description: 簡易ユーザー情報
      properties:
        id:
          type: string
          description: ユーザーID
        name:
          type: string
          description: ユーザー名
      required:
        - id
        - name
    AppRequest:
      description: App向け配車要求情報
      type: object
      properties:
        request_id:
          type: string
          description: 配車要求ID
        pickup_coordinate:
          $ref: "#/components/schemas/Coordinate"
        destination_coordinate:
          $ref: "#/components/schemas/Coordinate"
        status:
          $ref: "#/components/schemas/RequestStatus"
        chair:
          $ref: "#/components/schemas/AppChair"
        created_at:
          type: number
          description: 配車要求日時
        updated_at:
          type: number
          description: 配車要求更新日時
      required:
        - request_id
        - pickup_coordinate
        - destination_coordinate
        - status
        - created_at
        - updated_at
    ChairRequest:
      description: Chair向け配車要求情報
      type: object
      properties:
        request_id:
          type: string
          description: 配車要求ID
        user:
          $ref: "#/components/schemas/User"
        pickup_coordinate:
          $ref: "#/components/schemas/Coordinate"
        destination_coordinate:
          $ref: "#/components/schemas/Coordinate"
        status:
          $ref: "#/components/schemas/RequestStatus"
      required:
        - request_id
        - user
        - destination_coordinate
    Error:
      type: object
      title: Error
      properties:
        message:
          type: string
      required:
        - message
