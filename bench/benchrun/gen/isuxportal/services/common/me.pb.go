// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: isuxportal/services/common/me.proto

package common

import (
	resources "github.com/yuta-otsubo/isucon-sutra/bench/benchrun/gen/isuxportal/resources"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCurrentSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrentSessionRequest) Reset() {
	*x = GetCurrentSessionRequest{}
	mi := &file_isuxportal_services_common_me_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrentSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentSessionRequest) ProtoMessage() {}

func (x *GetCurrentSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_isuxportal_services_common_me_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentSessionRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentSessionRequest) Descriptor() ([]byte, []int) {
	return file_isuxportal_services_common_me_proto_rawDescGZIP(), []int{0}
}

type GetCurrentSessionResponse struct {
	state               protoimpl.MessageState          `protogen:"open.v1"`
	Team                *resources.Team                 `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
	Contestant          *resources.Contestant           `protobuf:"bytes,2,opt,name=contestant,proto3" json:"contestant,omitempty"`
	DiscordServerId     string                          `protobuf:"bytes,3,opt,name=discord_server_id,json=discordServerId,proto3" json:"discord_server_id,omitempty"`
	Contest             *resources.Contest              `protobuf:"bytes,4,opt,name=contest,proto3" json:"contest,omitempty"`
	ContestantInstances []*resources.ContestantInstance `protobuf:"bytes,5,rep,name=contestant_instances,json=contestantInstances,proto3" json:"contestant_instances,omitempty"`
	PushVapidKey        string                          `protobuf:"bytes,6,opt,name=push_vapid_key,json=pushVapidKey,proto3" json:"push_vapid_key,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetCurrentSessionResponse) Reset() {
	*x = GetCurrentSessionResponse{}
	mi := &file_isuxportal_services_common_me_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrentSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentSessionResponse) ProtoMessage() {}

func (x *GetCurrentSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_isuxportal_services_common_me_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentSessionResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentSessionResponse) Descriptor() ([]byte, []int) {
	return file_isuxportal_services_common_me_proto_rawDescGZIP(), []int{1}
}

func (x *GetCurrentSessionResponse) GetTeam() *resources.Team {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *GetCurrentSessionResponse) GetContestant() *resources.Contestant {
	if x != nil {
		return x.Contestant
	}
	return nil
}

func (x *GetCurrentSessionResponse) GetDiscordServerId() string {
	if x != nil {
		return x.DiscordServerId
	}
	return ""
}

func (x *GetCurrentSessionResponse) GetContest() *resources.Contest {
	if x != nil {
		return x.Contest
	}
	return nil
}

func (x *GetCurrentSessionResponse) GetContestantInstances() []*resources.ContestantInstance {
	if x != nil {
		return x.ContestantInstances
	}
	return nil
}

func (x *GetCurrentSessionResponse) GetPushVapidKey() string {
	if x != nil {
		return x.PushVapidKey
	}
	return ""
}

var File_isuxportal_services_common_me_proto protoreflect.FileDescriptor

const file_isuxportal_services_common_me_proto_rawDesc = "" +
	"\n" +
	"#isuxportal/services/common/me.proto\x12 isuxportal.proto.services.common\x1a\x1fisuxportal/resources/team.proto\x1a%isuxportal/resources/contestant.proto\x1a.isuxportal/resources/contestant_instance.proto\x1a\"isuxportal/resources/contest.proto\"\x1a\n" +
	"\x18GetCurrentSessionRequest\"\x8d\x03\n" +
	"\x19GetCurrentSessionResponse\x124\n" +
	"\x04team\x18\x01 \x01(\v2 .isuxportal.proto.resources.TeamR\x04team\x12F\n" +
	"\n" +
	"contestant\x18\x02 \x01(\v2&.isuxportal.proto.resources.ContestantR\n" +
	"contestant\x12*\n" +
	"\x11discord_server_id\x18\x03 \x01(\tR\x0fdiscordServerId\x12=\n" +
	"\acontest\x18\x04 \x01(\v2#.isuxportal.proto.resources.ContestR\acontest\x12a\n" +
	"\x14contestant_instances\x18\x05 \x03(\v2..isuxportal.proto.resources.ContestantInstanceR\x13contestantInstances\x12$\n" +
	"\x0epush_vapid_key\x18\x06 \x01(\tR\fpushVapidKeyB\xa6\x02\n" +
	"$com.isuxportal.proto.services.commonB\aMeProtoP\x01ZQgithub.com/yuta-otsubo/isucon-sutra/bench/benchrun/gen/isuxportal/services/common\xa2\x02\x04IPSC\xaa\x02 Isuxportal.Proto.Services.Common\xca\x02 Isuxportal\\Proto\\Services\\Common\xe2\x02,Isuxportal\\Proto\\Services\\Common\\GPBMetadata\xea\x02#Isuxportal::Proto::Services::Commonb\x06proto3"

var (
	file_isuxportal_services_common_me_proto_rawDescOnce sync.Once
	file_isuxportal_services_common_me_proto_rawDescData []byte
)

func file_isuxportal_services_common_me_proto_rawDescGZIP() []byte {
	file_isuxportal_services_common_me_proto_rawDescOnce.Do(func() {
		file_isuxportal_services_common_me_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_isuxportal_services_common_me_proto_rawDesc), len(file_isuxportal_services_common_me_proto_rawDesc)))
	})
	return file_isuxportal_services_common_me_proto_rawDescData
}

var file_isuxportal_services_common_me_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_isuxportal_services_common_me_proto_goTypes = []any{
	(*GetCurrentSessionRequest)(nil),     // 0: isuxportal.proto.services.common.GetCurrentSessionRequest
	(*GetCurrentSessionResponse)(nil),    // 1: isuxportal.proto.services.common.GetCurrentSessionResponse
	(*resources.Team)(nil),               // 2: isuxportal.proto.resources.Team
	(*resources.Contestant)(nil),         // 3: isuxportal.proto.resources.Contestant
	(*resources.Contest)(nil),            // 4: isuxportal.proto.resources.Contest
	(*resources.ContestantInstance)(nil), // 5: isuxportal.proto.resources.ContestantInstance
}
var file_isuxportal_services_common_me_proto_depIdxs = []int32{
	2, // 0: isuxportal.proto.services.common.GetCurrentSessionResponse.team:type_name -> isuxportal.proto.resources.Team
	3, // 1: isuxportal.proto.services.common.GetCurrentSessionResponse.contestant:type_name -> isuxportal.proto.resources.Contestant
	4, // 2: isuxportal.proto.services.common.GetCurrentSessionResponse.contest:type_name -> isuxportal.proto.resources.Contest
	5, // 3: isuxportal.proto.services.common.GetCurrentSessionResponse.contestant_instances:type_name -> isuxportal.proto.resources.ContestantInstance
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_isuxportal_services_common_me_proto_init() }
func file_isuxportal_services_common_me_proto_init() {
	if File_isuxportal_services_common_me_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_isuxportal_services_common_me_proto_rawDesc), len(file_isuxportal_services_common_me_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_isuxportal_services_common_me_proto_goTypes,
		DependencyIndexes: file_isuxportal_services_common_me_proto_depIdxs,
		MessageInfos:      file_isuxportal_services_common_me_proto_msgTypes,
	}.Build()
	File_isuxportal_services_common_me_proto = out.File
	file_isuxportal_services_common_me_proto_goTypes = nil
	file_isuxportal_services_common_me_proto_depIdxs = nil
}
