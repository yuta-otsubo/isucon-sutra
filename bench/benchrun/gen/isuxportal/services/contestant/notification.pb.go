// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: isuxportal/services/contestant/notification.proto

package contestant

import (
	resources "github.com/yuta-otsubo/isucon-sutra/bench/benchrun/gen/isuxportal/resources"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListNotificationsQuery struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Last notifications.id that a user-agent has received through ListNotificationsQuery during a current session.
	// If not specified (=0), uses server-side `read` column as a hint.
	After         int64 `protobuf:"varint,1,opt,name=after,proto3" json:"after,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotificationsQuery) Reset() {
	*x = ListNotificationsQuery{}
	mi := &file_isuxportal_services_contestant_notification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationsQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationsQuery) ProtoMessage() {}

func (x *ListNotificationsQuery) ProtoReflect() protoreflect.Message {
	mi := &file_isuxportal_services_contestant_notification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationsQuery.ProtoReflect.Descriptor instead.
func (*ListNotificationsQuery) Descriptor() ([]byte, []int) {
	return file_isuxportal_services_contestant_notification_proto_rawDescGZIP(), []int{0}
}

func (x *ListNotificationsQuery) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

type ListNotificationsResponse struct {
	state                       protoimpl.MessageState    `protogen:"open.v1"`
	LastAnsweredClarificationId int64                     `protobuf:"varint,1,opt,name=last_answered_clarification_id,json=lastAnsweredClarificationId,proto3" json:"last_answered_clarification_id,omitempty"`
	Notifications               []*resources.Notification `protobuf:"bytes,2,rep,name=notifications,proto3" json:"notifications,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *ListNotificationsResponse) Reset() {
	*x = ListNotificationsResponse{}
	mi := &file_isuxportal_services_contestant_notification_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationsResponse) ProtoMessage() {}

func (x *ListNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_isuxportal_services_contestant_notification_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationsResponse.ProtoReflect.Descriptor instead.
func (*ListNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_isuxportal_services_contestant_notification_proto_rawDescGZIP(), []int{1}
}

func (x *ListNotificationsResponse) GetLastAnsweredClarificationId() int64 {
	if x != nil {
		return x.LastAnsweredClarificationId
	}
	return 0
}

func (x *ListNotificationsResponse) GetNotifications() []*resources.Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

type SubscribeNotificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoint      string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	P256Dh        string                 `protobuf:"bytes,2,opt,name=p256dh,proto3" json:"p256dh,omitempty"`
	Auth          string                 `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeNotificationRequest) Reset() {
	*x = SubscribeNotificationRequest{}
	mi := &file_isuxportal_services_contestant_notification_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeNotificationRequest) ProtoMessage() {}

func (x *SubscribeNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_isuxportal_services_contestant_notification_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeNotificationRequest.ProtoReflect.Descriptor instead.
func (*SubscribeNotificationRequest) Descriptor() ([]byte, []int) {
	return file_isuxportal_services_contestant_notification_proto_rawDescGZIP(), []int{2}
}

func (x *SubscribeNotificationRequest) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *SubscribeNotificationRequest) GetP256Dh() string {
	if x != nil {
		return x.P256Dh
	}
	return ""
}

func (x *SubscribeNotificationRequest) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

type SubscribeNotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeNotificationResponse) Reset() {
	*x = SubscribeNotificationResponse{}
	mi := &file_isuxportal_services_contestant_notification_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeNotificationResponse) ProtoMessage() {}

func (x *SubscribeNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_isuxportal_services_contestant_notification_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeNotificationResponse.ProtoReflect.Descriptor instead.
func (*SubscribeNotificationResponse) Descriptor() ([]byte, []int) {
	return file_isuxportal_services_contestant_notification_proto_rawDescGZIP(), []int{3}
}

type UnsubscribeNotificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoint      string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnsubscribeNotificationRequest) Reset() {
	*x = UnsubscribeNotificationRequest{}
	mi := &file_isuxportal_services_contestant_notification_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnsubscribeNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeNotificationRequest) ProtoMessage() {}

func (x *UnsubscribeNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_isuxportal_services_contestant_notification_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeNotificationRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeNotificationRequest) Descriptor() ([]byte, []int) {
	return file_isuxportal_services_contestant_notification_proto_rawDescGZIP(), []int{4}
}

func (x *UnsubscribeNotificationRequest) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

type UnsubscribeNotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnsubscribeNotificationResponse) Reset() {
	*x = UnsubscribeNotificationResponse{}
	mi := &file_isuxportal_services_contestant_notification_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnsubscribeNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeNotificationResponse) ProtoMessage() {}

func (x *UnsubscribeNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_isuxportal_services_contestant_notification_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeNotificationResponse.ProtoReflect.Descriptor instead.
func (*UnsubscribeNotificationResponse) Descriptor() ([]byte, []int) {
	return file_isuxportal_services_contestant_notification_proto_rawDescGZIP(), []int{5}
}

var File_isuxportal_services_contestant_notification_proto protoreflect.FileDescriptor

const file_isuxportal_services_contestant_notification_proto_rawDesc = "" +
	"\n" +
	"1isuxportal/services/contestant/notification.proto\x12$isuxportal.proto.services.contestant\x1a'isuxportal/resources/notification.proto\".\n" +
	"\x16ListNotificationsQuery\x12\x14\n" +
	"\x05after\x18\x01 \x01(\x03R\x05after\"\xb0\x01\n" +
	"\x19ListNotificationsResponse\x12C\n" +
	"\x1elast_answered_clarification_id\x18\x01 \x01(\x03R\x1blastAnsweredClarificationId\x12N\n" +
	"\rnotifications\x18\x02 \x03(\v2(.isuxportal.proto.resources.NotificationR\rnotifications\"f\n" +
	"\x1cSubscribeNotificationRequest\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x16\n" +
	"\x06p256dh\x18\x02 \x01(\tR\x06p256dh\x12\x12\n" +
	"\x04auth\x18\x03 \x01(\tR\x04auth\"\x1f\n" +
	"\x1dSubscribeNotificationResponse\"<\n" +
	"\x1eUnsubscribeNotificationRequest\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\"!\n" +
	"\x1fUnsubscribeNotificationResponseB\xc8\x02\n" +
	"(com.isuxportal.proto.services.contestantB\x11NotificationProtoP\x01ZUgithub.com/yuta-otsubo/isucon-sutra/bench/benchrun/gen/isuxportal/services/contestant\xa2\x02\x04IPSC\xaa\x02$Isuxportal.Proto.Services.Contestant\xca\x02$Isuxportal\\Proto\\Services\\Contestant\xe2\x020Isuxportal\\Proto\\Services\\Contestant\\GPBMetadata\xea\x02'Isuxportal::Proto::Services::Contestantb\x06proto3"

var (
	file_isuxportal_services_contestant_notification_proto_rawDescOnce sync.Once
	file_isuxportal_services_contestant_notification_proto_rawDescData []byte
)

func file_isuxportal_services_contestant_notification_proto_rawDescGZIP() []byte {
	file_isuxportal_services_contestant_notification_proto_rawDescOnce.Do(func() {
		file_isuxportal_services_contestant_notification_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_isuxportal_services_contestant_notification_proto_rawDesc), len(file_isuxportal_services_contestant_notification_proto_rawDesc)))
	})
	return file_isuxportal_services_contestant_notification_proto_rawDescData
}

var file_isuxportal_services_contestant_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_isuxportal_services_contestant_notification_proto_goTypes = []any{
	(*ListNotificationsQuery)(nil),          // 0: isuxportal.proto.services.contestant.ListNotificationsQuery
	(*ListNotificationsResponse)(nil),       // 1: isuxportal.proto.services.contestant.ListNotificationsResponse
	(*SubscribeNotificationRequest)(nil),    // 2: isuxportal.proto.services.contestant.SubscribeNotificationRequest
	(*SubscribeNotificationResponse)(nil),   // 3: isuxportal.proto.services.contestant.SubscribeNotificationResponse
	(*UnsubscribeNotificationRequest)(nil),  // 4: isuxportal.proto.services.contestant.UnsubscribeNotificationRequest
	(*UnsubscribeNotificationResponse)(nil), // 5: isuxportal.proto.services.contestant.UnsubscribeNotificationResponse
	(*resources.Notification)(nil),          // 6: isuxportal.proto.resources.Notification
}
var file_isuxportal_services_contestant_notification_proto_depIdxs = []int32{
	6, // 0: isuxportal.proto.services.contestant.ListNotificationsResponse.notifications:type_name -> isuxportal.proto.resources.Notification
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_isuxportal_services_contestant_notification_proto_init() }
func file_isuxportal_services_contestant_notification_proto_init() {
	if File_isuxportal_services_contestant_notification_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_isuxportal_services_contestant_notification_proto_rawDesc), len(file_isuxportal_services_contestant_notification_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_isuxportal_services_contestant_notification_proto_goTypes,
		DependencyIndexes: file_isuxportal_services_contestant_notification_proto_depIdxs,
		MessageInfos:      file_isuxportal_services_contestant_notification_proto_msgTypes,
	}.Build()
	File_isuxportal_services_contestant_notification_proto = out.File
	file_isuxportal_services_contestant_notification_proto_goTypes = nil
	file_isuxportal_services_contestant_notification_proto_depIdxs = nil
}
