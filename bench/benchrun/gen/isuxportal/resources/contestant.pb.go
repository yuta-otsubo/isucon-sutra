// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: isuxportal/resources/contestant.proto

package resources

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Contestant struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Id            int64                        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TeamId        int64                        `protobuf:"varint,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Name          string                       `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Detail        *Contestant_ContestantDetail `protobuf:"bytes,7,opt,name=detail,proto3" json:"detail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Contestant) Reset() {
	*x = Contestant{}
	mi := &file_isuxportal_resources_contestant_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Contestant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contestant) ProtoMessage() {}

func (x *Contestant) ProtoReflect() protoreflect.Message {
	mi := &file_isuxportal_resources_contestant_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contestant.ProtoReflect.Descriptor instead.
func (*Contestant) Descriptor() ([]byte, []int) {
	return file_isuxportal_resources_contestant_proto_rawDescGZIP(), []int{0}
}

func (x *Contestant) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Contestant) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *Contestant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Contestant) GetDetail() *Contestant_ContestantDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type Contestant_ContestantDetail struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	GithubLogin          string                 `protobuf:"bytes,1,opt,name=github_login,json=githubLogin,proto3" json:"github_login,omitempty"`
	DiscordTag           string                 `protobuf:"bytes,2,opt,name=discord_tag,json=discordTag,proto3" json:"discord_tag,omitempty"`
	IsStudent            bool                   `protobuf:"varint,3,opt,name=is_student,json=isStudent,proto3" json:"is_student,omitempty"`
	AvatarUrl            string                 `protobuf:"bytes,4,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	IsInPerson           bool                   `protobuf:"varint,5,opt,name=is_in_person,json=isInPerson,proto3" json:"is_in_person,omitempty"`
	GithubId             string                 `protobuf:"bytes,16,opt,name=github_id,json=githubId,proto3" json:"github_id,omitempty"`
	DiscordId            string                 `protobuf:"bytes,17,opt,name=discord_id,json=discordId,proto3" json:"discord_id,omitempty"`
	IsSshKeyRegistered   bool                   `protobuf:"varint,21,opt,name=is_ssh_key_registered,json=isSshKeyRegistered,proto3" json:"is_ssh_key_registered,omitempty"`
	IsDiscordGuildMember bool                   `protobuf:"varint,22,opt,name=is_discord_guild_member,json=isDiscordGuildMember,proto3" json:"is_discord_guild_member,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Contestant_ContestantDetail) Reset() {
	*x = Contestant_ContestantDetail{}
	mi := &file_isuxportal_resources_contestant_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Contestant_ContestantDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contestant_ContestantDetail) ProtoMessage() {}

func (x *Contestant_ContestantDetail) ProtoReflect() protoreflect.Message {
	mi := &file_isuxportal_resources_contestant_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contestant_ContestantDetail.ProtoReflect.Descriptor instead.
func (*Contestant_ContestantDetail) Descriptor() ([]byte, []int) {
	return file_isuxportal_resources_contestant_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Contestant_ContestantDetail) GetGithubLogin() string {
	if x != nil {
		return x.GithubLogin
	}
	return ""
}

func (x *Contestant_ContestantDetail) GetDiscordTag() string {
	if x != nil {
		return x.DiscordTag
	}
	return ""
}

func (x *Contestant_ContestantDetail) GetIsStudent() bool {
	if x != nil {
		return x.IsStudent
	}
	return false
}

func (x *Contestant_ContestantDetail) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *Contestant_ContestantDetail) GetIsInPerson() bool {
	if x != nil {
		return x.IsInPerson
	}
	return false
}

func (x *Contestant_ContestantDetail) GetGithubId() string {
	if x != nil {
		return x.GithubId
	}
	return ""
}

func (x *Contestant_ContestantDetail) GetDiscordId() string {
	if x != nil {
		return x.DiscordId
	}
	return ""
}

func (x *Contestant_ContestantDetail) GetIsSshKeyRegistered() bool {
	if x != nil {
		return x.IsSshKeyRegistered
	}
	return false
}

func (x *Contestant_ContestantDetail) GetIsDiscordGuildMember() bool {
	if x != nil {
		return x.IsDiscordGuildMember
	}
	return false
}

var File_isuxportal_resources_contestant_proto protoreflect.FileDescriptor

const file_isuxportal_resources_contestant_proto_rawDesc = "" +
	"\n" +
	"%isuxportal/resources/contestant.proto\x12\x1aisuxportal.proto.resources\"\xf9\x03\n" +
	"\n" +
	"Contestant\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\ateam_id\x18\x02 \x01(\x03R\x06teamId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12O\n" +
	"\x06detail\x18\a \x01(\v27.isuxportal.proto.resources.Contestant.ContestantDetailR\x06detail\x1a\xdc\x02\n" +
	"\x10ContestantDetail\x12!\n" +
	"\fgithub_login\x18\x01 \x01(\tR\vgithubLogin\x12\x1f\n" +
	"\vdiscord_tag\x18\x02 \x01(\tR\n" +
	"discordTag\x12\x1d\n" +
	"\n" +
	"is_student\x18\x03 \x01(\bR\tisStudent\x12\x1d\n" +
	"\n" +
	"avatar_url\x18\x04 \x01(\tR\tavatarUrl\x12 \n" +
	"\fis_in_person\x18\x05 \x01(\bR\n" +
	"isInPerson\x12\x1b\n" +
	"\tgithub_id\x18\x10 \x01(\tR\bgithubId\x12\x1d\n" +
	"\n" +
	"discord_id\x18\x11 \x01(\tR\tdiscordId\x121\n" +
	"\x15is_ssh_key_registered\x18\x15 \x01(\bR\x12isSshKeyRegistered\x125\n" +
	"\x17is_discord_guild_member\x18\x16 \x01(\bR\x14isDiscordGuildMemberB\x88\x02\n" +
	"\x1ecom.isuxportal.proto.resourcesB\x0fContestantProtoP\x01ZKgithub.com/yuta-otsubo/isucon-sutra/bench/benchrun/gen/isuxportal/resources\xa2\x02\x03IPR\xaa\x02\x1aIsuxportal.Proto.Resources\xca\x02\x1aIsuxportal\\Proto\\Resources\xe2\x02&Isuxportal\\Proto\\Resources\\GPBMetadata\xea\x02\x1cIsuxportal::Proto::Resourcesb\x06proto3"

var (
	file_isuxportal_resources_contestant_proto_rawDescOnce sync.Once
	file_isuxportal_resources_contestant_proto_rawDescData []byte
)

func file_isuxportal_resources_contestant_proto_rawDescGZIP() []byte {
	file_isuxportal_resources_contestant_proto_rawDescOnce.Do(func() {
		file_isuxportal_resources_contestant_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_isuxportal_resources_contestant_proto_rawDesc), len(file_isuxportal_resources_contestant_proto_rawDesc)))
	})
	return file_isuxportal_resources_contestant_proto_rawDescData
}

var file_isuxportal_resources_contestant_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_isuxportal_resources_contestant_proto_goTypes = []any{
	(*Contestant)(nil),                  // 0: isuxportal.proto.resources.Contestant
	(*Contestant_ContestantDetail)(nil), // 1: isuxportal.proto.resources.Contestant.ContestantDetail
}
var file_isuxportal_resources_contestant_proto_depIdxs = []int32{
	1, // 0: isuxportal.proto.resources.Contestant.detail:type_name -> isuxportal.proto.resources.Contestant.ContestantDetail
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_isuxportal_resources_contestant_proto_init() }
func file_isuxportal_resources_contestant_proto_init() {
	if File_isuxportal_resources_contestant_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_isuxportal_resources_contestant_proto_rawDesc), len(file_isuxportal_resources_contestant_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_isuxportal_resources_contestant_proto_goTypes,
		DependencyIndexes: file_isuxportal_resources_contestant_proto_depIdxs,
		MessageInfos:      file_isuxportal_resources_contestant_proto_msgTypes,
	}.Build()
	File_isuxportal_resources_contestant_proto = out.File
	file_isuxportal_resources_contestant_proto_goTypes = nil
	file_isuxportal_resources_contestant_proto_depIdxs = nil
}
