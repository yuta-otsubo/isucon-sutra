// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// AppGetNearbyChairs implements app-get-nearby-chairs operation.
	//
	// ユーザーの近くにいる椅子を取得する.
	//
	// GET /app/nearby-chairs
	AppGetNearbyChairs(ctx context.Context, params AppGetNearbyChairsParams) (*AppGetNearbyChairsOK, error)
	// AppGetNotification implements app-get-notification operation.
	//
	// 最新の自分の配車要求を取得します。.
	//
	// GET /app/notification
	AppGetNotification(ctx context.Context) (AppGetNotificationRes, error)
	// AppGetRequest implements app-get-request operation.
	//
	// ユーザーが配車要求の状態を確認する.
	//
	// GET /app/requests/{request_id}
	AppGetRequest(ctx context.Context, params AppGetRequestParams) (AppGetRequestRes, error)
	// AppPostPaymentMethods implements app-post-payment-methods operation.
	//
	// 決済トークンの登録.
	//
	// POST /app/payment-methods
	AppPostPaymentMethods(ctx context.Context, req OptAppPostPaymentMethodsReq) (AppPostPaymentMethodsRes, error)
	// AppPostRegister implements app-post-register operation.
	//
	// ユーザーが会員登録を行う.
	//
	// POST /app/register
	AppPostRegister(ctx context.Context, req OptAppPostRegisterReq) (AppPostRegisterRes, error)
	// AppPostRequest implements app-post-request operation.
	//
	// ユーザーが配車要求を行う.
	//
	// POST /app/requests
	AppPostRequest(ctx context.Context, req OptAppPostRequestReq) (AppPostRequestRes, error)
	// AppPostRequestEstimate implements app-post-request-estimate operation.
	//
	// リクエストの料金を見積もる.
	//
	// POST /app/requests/estimate
	AppPostRequestEstimate(ctx context.Context, req OptAppPostRequestEstimateReq) (AppPostRequestEstimateRes, error)
	// AppPostRequestEvaluate implements app-post-request-evaluate operation.
	//
	// ユーザーが椅子を評価する.
	//
	// POST /app/requests/{request_id}/evaluate
	AppPostRequestEvaluate(ctx context.Context, req OptAppPostRequestEvaluateReq, params AppPostRequestEvaluateParams) (AppPostRequestEvaluateRes, error)
	// ChairGetNotification implements chair-get-notification operation.
	//
	// 椅子に配車要求を通知するなどで使う想定.
	//
	// GET /chair/notification
	ChairGetNotification(ctx context.Context) (ChairGetNotificationRes, error)
	// ChairGetRequest implements chair-get-request operation.
	//
	// 椅子向け通知エンドポイントから通知されたidの情報を取得する想定.
	//
	// GET /chair/requests/{request_id}
	ChairGetRequest(ctx context.Context, params ChairGetRequestParams) (ChairGetRequestRes, error)
	// ChairPostActivate implements chair-post-activate operation.
	//
	// 椅子が配車受付を開始する.
	//
	// POST /chair/activate
	ChairPostActivate(ctx context.Context) error
	// ChairPostCoordinate implements chair-post-coordinate operation.
	//
	// 椅子が位置情報を送信する.
	//
	// POST /chair/coordinate
	ChairPostCoordinate(ctx context.Context, req OptCoordinate) (*ChairPostCoordinateOK, error)
	// ChairPostDeactivate implements chair-post-deactivate operation.
	//
	// 椅子が配車受付を停止する.
	//
	// POST /chair/deactivate
	ChairPostDeactivate(ctx context.Context) error
	// ChairPostRegister implements chair-post-register operation.
	//
	// 椅子登録を行う.
	//
	// POST /chair/register
	ChairPostRegister(ctx context.Context, req OptChairPostRegisterReq) (*ChairPostRegisterCreated, error)
	// ChairPostRequestAccept implements chair-post-request-accept operation.
	//
	// 椅子が配車要求を受理する.
	//
	// POST /chair/requests/{request_id}/accept
	ChairPostRequestAccept(ctx context.Context, params ChairPostRequestAcceptParams) (ChairPostRequestAcceptRes, error)
	// ChairPostRequestDeny implements chair-post-request-deny operation.
	//
	// 椅子が配車要求を拒否する.
	//
	// POST /chair/requests/{request_id}/deny
	ChairPostRequestDeny(ctx context.Context, params ChairPostRequestDenyParams) (ChairPostRequestDenyRes, error)
	// ChairPostRequestDepart implements chair-post-request-depart operation.
	//
	// 椅子が配車位置から出発する(ユーザーが乗車完了した).
	//
	// POST /chair/requests/{request_id}/depart
	ChairPostRequestDepart(ctx context.Context, params ChairPostRequestDepartParams) (ChairPostRequestDepartRes, error)
	// OwnerGetChairDetail implements owner-get-chair-detail operation.
	//
	// 管理している椅子の詳細を取得する.
	//
	// GET /owner/chairs/{chair_id}
	OwnerGetChairDetail(ctx context.Context, params OwnerGetChairDetailParams) (*OwnerGetChairDetailOK, error)
	// OwnerGetChairs implements owner-get-chairs operation.
	//
	// 椅子のオーナーが管理している椅子の一覧を取得する.
	//
	// GET /owner/chairs
	OwnerGetChairs(ctx context.Context) (*OwnerGetChairsOK, error)
	// OwnerGetSales implements owner-get-sales operation.
	//
	// 椅子のオーナーが指定期間の全体・椅子ごと・モデルごとの売上情報を取得する.
	//
	// GET /owner/sales
	OwnerGetSales(ctx context.Context, params OwnerGetSalesParams) (*OwnerGetSalesOK, error)
	// OwnerPostRegister implements owner-post-register operation.
	//
	// 椅子のオーナー自身が登録を行う.
	//
	// POST /owner/register
	OwnerPostRegister(ctx context.Context, req OptOwnerPostRegisterReq) (OwnerPostRegisterRes, error)
	// PostInitialize implements post-initialize operation.
	//
	// サービスを初期化する.
	//
	// POST /initialize
	PostInitialize(ctx context.Context, req OptPostInitializeReq) (*PostInitializeOK, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
